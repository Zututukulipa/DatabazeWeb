CREATE OR REPLACE PACKAGE PKG_GMSG AS
    SUBTYPE T_ID IS GROUP_MESSAGES.GMSG_ID%TYPE;
    SUBTYPE T_CONTENT IS GROUP_MESSAGES.CONTENT%TYPE;
    SUBTYPE T_CREATED IS GROUP_MESSAGES.CREATED%TYPE;

    FUNCTION NEW(p_group PKG_GROUP.T_ID, p_user PKG_USER.T_ID, p_content T_CONTENT) RETURN T_ID;

    FUNCTION GET_ALL RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_ID(p_message T_ID) RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_GROUP(p_group PKG_GROUP.T_ID) RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_USER(p_user PKG_USER.T_ID) RETURN SYS_REFCURSOR;

    PROCEDURE UPDATE_GROUP(p_message T_ID, p_group PKG_GROUP.T_ID);

    PROCEDURE UPDATE_USER(p_message T_ID, p_user PKG_USER.T_ID);

    PROCEDURE UPDATE_CONTENT(p_message T_ID, p_content T_CONTENT);

    PROCEDURE REMOVE(p_message T_ID);
END;

CREATE OR REPLACE PACKAGE BODY PKG_GMSG AS
    FUNCTION NEW(p_group PKG_GROUP.T_ID, p_user PKG_USER.T_ID, p_content T_CONTENT) RETURN T_ID AS
        v_id T_ID;
    BEGIN
        INSERT INTO GROUP_MESSAGES(GROUP_ID, USER_ID, CONTENT)
        VALUES (p_group, p_user, p_content)
        RETURNING GMSG_ID INTO v_id;
        COMMIT;
        RETURN v_id;
    END;

    FUNCTION GET_ALL RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_GROUP_MESSAGES;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_ID(p_message T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_GROUP_MESSAGES WHERE MESSAGE_ID = p_message;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_GROUP(p_group PKG_GROUP.T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_GROUP_MESSAGES WHERE GROUP_ID = p_group;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_USER(p_user PKG_USER.T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_GROUP_MESSAGES WHERE AUTHOR_ID = p_user;
        RETURN v_cursor;
    END;

    PROCEDURE UPDATE_GROUP(p_message T_ID, p_group PKG_GROUP.T_ID) AS
    BEGIN
        UPDATE GROUP_MESSAGES SET GROUP_ID = p_group WHERE GMSG_ID = p_message;
        COMMIT;
    END;

    PROCEDURE UPDATE_USER(p_message T_ID, p_user PKG_USER.T_ID) AS
    BEGIN
        UPDATE GROUP_MESSAGES SET USER_ID = p_user WHERE GMSG_ID = p_message;
        COMMIT;
    END;

    PROCEDURE UPDATE_CONTENT(p_message T_ID, p_content T_CONTENT) AS
    BEGIN
        UPDATE GROUP_MESSAGES SET CONTENT = p_content WHERE GMSG_ID = p_message;
        COMMIT;
    END;

    PROCEDURE REMOVE(p_message T_ID) AS
    BEGIN
        DELETE FROM GROUP_MESSAGES WHERE GMSG_ID = p_message;
        COMMIT;
    END;
END;