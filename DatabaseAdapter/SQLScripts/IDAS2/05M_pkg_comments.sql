CREATE OR REPLACE PACKAGE PKG_COMMENT AS
    SUBTYPE T_ID IS COMMENTS.COMMENT_ID%TYPE;
    SUBTYPE T_CONTENT IS COMMENTS.CONTENT%TYPE;
    SUBTYPE T_CREATED IS COMMENTS.CREATED%TYPE;

    FUNCTION NEW(p_user PKG_USER.T_ID, p_message PKG_GMSG.T_ID, p_content T_CONTENT) RETURN T_ID;

    FUNCTION GET_ALL RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_ID(p_comment T_ID) RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_USER(p_user PKG_USER.T_ID) RETURN SYS_REFCURSOR;

    FUNCTION GET_BY_MESSAGE(p_message PKG_GMSG.T_ID) RETURN SYS_REFCURSOR;

    PROCEDURE UPDATE_USER(p_comment T_ID, p_user PKG_USER.T_ID);

    PROCEDURE UPDATE_MESSAGE(p_comment T_ID, p_message PKG_GMSG.T_ID);

    PROCEDURE UPDATE_CONTENT(p_comment T_ID, p_content T_CONTENT);

    PROCEDURE REMOVE(p_comment T_ID);
END;

CREATE OR REPLACE PACKAGE BODY PKG_COMMENT AS
    FUNCTION NEW(p_user PKG_USER.T_ID, p_message PKG_GMSG.T_ID, p_content T_CONTENT) RETURN T_ID AS
        v_id T_ID;
    BEGIN
        INSERT INTO COMMENTS(USER_ID, MESSAGE_ID, CONTENT)
        VALUES (p_user, p_message, p_content)
        RETURNING COMMENT_ID INTO v_id;
        COMMIT;
        RETURN v_id;
    END;

    FUNCTION GET_ALL RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_COMMENTS;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_ID(p_comment T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_COMMENTS WHERE COMMENT_ID = p_comment;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_USER(p_user PKG_USER.T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_COMMENTS WHERE COMMENT_AUTHOR_ID = p_user;
        RETURN v_cursor;
    END;

    FUNCTION GET_BY_MESSAGE(p_message PKG_GMSG.T_ID) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
    BEGIN
        OPEN v_cursor FOR SELECT * FROM VW_COMMENTS WHERE MESSAGE_ID = p_message;
        RETURN v_cursor;
    END;

    PROCEDURE UPDATE_USER(p_comment T_ID, p_user PKG_USER.T_ID) AS
    BEGIN
        UPDATE COMMENTS SET USER_ID = p_user WHERE COMMENT_ID = p_comment;
        COMMIT;
    END;

    PROCEDURE UPDATE_MESSAGE(p_comment T_ID, p_message PKG_GMSG.T_ID) AS
    BEGIN
        UPDATE COMMENTS SET MESSAGE_ID = p_message WHERE COMMENT_ID = p_comment;
        COMMIT;
    END;

    PROCEDURE UPDATE_CONTENT(p_comment T_ID, p_content T_CONTENT) AS
    BEGIN
        UPDATE COMMENTS SET CONTENT = p_content WHERE COMMENT_ID = p_comment;
        COMMIT;
    END;

    PROCEDURE REMOVE(p_comment T_ID) AS
    BEGIN
        DELETE FROM COMMENTS WHERE COMMENT_ID = p_comment;
        COMMIT;
    END;
END;