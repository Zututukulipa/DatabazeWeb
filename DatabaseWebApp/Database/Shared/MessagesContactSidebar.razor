    @using Database.Services
@using DatabaseAdapter.OracleLib.Models
@inject ChatState ChatState
<div class="col-sm-4 pre-scrollable" style="min-height: 870px">
    <table class="table overflow-auto">
        <thead>Conversations</thead>
        <tbody>
        @foreach (var userMessages in Conversations)
        {
            IPrivateMessages lastMessage;
            try
            {
                lastMessage = userMessages.Last(x => (x.FromUser.Equals(userMessages.Key) && x.ToUser.Equals(UserService.ActiveUser)) || (x.FromUser.Equals(UserService.ActiveUser) && x.ToUser.Equals(userMessages.Key)));
            }
            catch(Exception)
            {
                lastMessage = new PrivateMessages{Content = "", FromUser = userMessages.Key, ToUser = UserService.ActiveUser, Created = DateTime.Now};
            }
            if (!(lastMessage.FromUser.Equals(UserService.ActiveUser) && lastMessage.ToUser.Equals(UserService.ActiveUser)))
            {
                <tr class="list-group-item-action" @onclick=@(() => ChatSelection(userMessages.Key))>
                    <td>
                        @* TODO finish changing picture *@
                        <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="User name" class="mr-3 rounded-circle align-self-center" width="45px" style="float:right">
                    </td>
                    <td>
                        <ul class="list-group">
                            <li style="list-style-type: none;">@lastMessage.FromUser.FirstName @lastMessage.FromUser.LastName</li>
                            @if (lastMessage.Content.Length > 15)
                            {
                                @lastMessage.Content.Substring(0, 15).Insert(15, "...")
                            }
                            else
                            {
                                @lastMessage.Content
                            }
                            <li class="text-muted h7 mb-3" style="list-style-type: none;">@lastMessage.Created.ToString("MM/dd/yyyy h:mm tt")</li>

                        </ul>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

@code
{
    [Parameter]
    public ILookup<User, IPrivateMessages> Conversations { get; set; }

    void ChatSelection(User newlySelectedUser)
    {
        ChatState.SelectedUser = newlySelectedUser;
        ChatState.NotifyStateChanged();
    }
}

